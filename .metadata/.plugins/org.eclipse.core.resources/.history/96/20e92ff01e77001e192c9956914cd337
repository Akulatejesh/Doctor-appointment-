package com.project.demo.controller;


import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.project.demo.entities.Doctor;
import com.project.demo.entities.Patient;
import com.project.demo.repository.DoctorRepository;
import com.project.demo.repository.PatientDetailsRepository;
import com.project.demo.services.PatientService;
 
import jakarta.servlet.http.HttpServletRequest;
 
@Controller
public class PatientController {
	
	@Autowired
	private PatientDetailsRepository patientdetailsrepository;
	@Autowired
    private DoctorRepository doctorRepository;
	
    @Autowired
    private PatientService patientService;
    @GetMapping("/receptionist-dashboard")
    public String welcomepatient(Model model) {
    	 List<Doctor> doctors = doctorRepository.findAll();
         model.addAttribute("doctors", doctors);
    	return "receptionist-dashboard";
    }
 
    @GetMapping("/patientregistration")
    public String patientRegistrationPage() {
        return "patientregistration";
    }
    
    @GetMapping("/patientdetailsdisplay")
    public String display() {
    	return "patientdetailsdisplay";
    }
 
    @PostMapping("/patientregistration")
    public String registerPatient(@RequestParam String username, @RequestParam String password,HttpServletRequest request) {
        Patient patient = patientService.registerPatient(username, password);
 
        if (patient == null) {
            // Handle the case where registration failed (e.g., username already in use)
        	request.setAttribute("error", "Invalid login. Please try again.");
        	return "redirect:/patientregistration"; // Redirect back to registration page with an error message
        }
        else {
 
        // Redirect to the patient's dashboard or another page
        return "redirect:/receptionist-dashboard";
    }}
 
    @GetMapping("/patientlogin")
    public String patientLoginPage() {
        return "patientlogin";
    }
 
    @PostMapping("/patientlogin")
    public String loginPatient(@RequestParam String username, @RequestParam String password,HttpServletRequest request) {
        Patient patient = patientService.loginPatient(username, password);
 
        if (patient == null) {
            // Handle the case where login failed (e.g., invalid credentials)
        	request.setAttribute("error", "Invalid registration. Please try again.");
 
        	return "redirect:/patientlogin"; // Redirect back to login page with an error message
        }
        else {
 
        // Redirect to the patient's dashboard or another page
        return "redirect:/patientdetailsdisplay";
    }}
}
